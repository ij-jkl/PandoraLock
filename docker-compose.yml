services:
  mysql:
    image: mysql:8.0
    container_name: pandora_mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${HOST_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pandora_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: pandora_redis
    restart: always
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - pandora_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pandora_api
    restart: always
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      MYSQL_CONNECTION_STRING: server=mysql;port=3306;database=${MYSQL_DATABASE};uid=${MYSQL_USER};pwd=${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      JWT_ACCESS_TOKEN_LIFETIME_MINUTES: ${JWT_ACCESS_TOKEN_LIFETIME_MINUTES}
      FILE_STORAGE_PATH: /app/FileStorage
      MAX_FILE_SIZE_MB: ${MAX_FILE_SIZE_MB}
      FILE_ENCRYPTION_KEY: ${FILE_ENCRYPTION_KEY}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USERNAME: ${EMAIL_SMTP_USERNAME}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_FROM_EMAIL: ${EMAIL_FROM_EMAIL}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME}
      EMAIL_ENABLE_SSL: ${EMAIL_ENABLE_SSL}
    ports:
      - "8080:8080"
    volumes:
      - file_storage:/app/FileStorage
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pandora_network

volumes:
  mysql_data:
  redis_data:
  file_storage:

networks:
  pandora_network:
    driver: bridge
